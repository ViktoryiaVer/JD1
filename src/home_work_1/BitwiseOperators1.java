package home_work_1;

public class BitwiseOperators1 {
    public static void main(String[] args) {
        //Используется побитовый оператор AND
        int c = 42 & 15; // 42 = 00101010; 15 = 00001111; c = 00001010;
        System.out.println("42 & 15 = " + c);

        //Используется побитовый оператор OR
        int d = 42 | 15; // 42 = 00101010; 15 = 00001111; d = 00101111;
        System.out.println("42 | 15 = " + d);

        // Используется побитовый оператор XOR
        int e = 42 ^ 15; // 42 = 00101010; 15 = 00001111; с = 00100101;
        System.out.println("42 ^ 15 = " +e);

        //Используется побитовый унарный оператор NOT
        int f = ~42; // 42 = 00101010; f = 11010101;
        System.out.println("~42 = " + f);
        int g = ~15; // 15 = 00001111; g = 11110000;
        System.out.println("~15 = " + g);

        // Используется сдвиг вправо
        int h = 42 >> 2; // 42 = 00101010; h = 00001010;
        System.out.println("42 >> 2 = " +h);
        int i = 15 >>2; // 15 = 00001111; i = 00000011;
        System.out.println("15 >> 2 = " +i);

        // Используется сдвиг вправо с заполнением нулями
        int j = 42 >>> 2; // 42 = 00101010; j = 00001010;
        System.out.println("42 >>> 2 = " + j);
        int k = 15 >>2; // 15 = 00001111; k = 00000011;
        System.out.println("15 >>> 2 = " + k);

        // Используется сдвиг влево
        int l = 42 << 2; // 42 = 00101010; l = 10101000;
        System.out.println("42 << 2 = " +l);
        int m = 15 << 2; // 15 = 00001111; m = 00111100;
        System.out.println("15 << 2 = " + m);
    }
}
